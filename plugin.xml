<plugin name='springws' version='0.2' grailsVersion='1.1 &gt; *'>
  <author>Russ Miles</author>
  <authorEmail>russ@russmiles.com</authorEmail>
  <title>This plugin adds contract driven web service capabilities to a Grails application.</title>
  <description>\
    	Spring Web Services plugin allows your Grails application to provide and consume 
    	contract-driven web services. Feature highlights include: 
		* New in 0.2: Endpoint Interceptors have been introduced so you can now introduce
		  common logic in an unintrusive fashion across a specified range of endpoints
		* New in 0.2: You can now export the wsdl for a given endpoint by, in the simplest case,  
		  setting the springws.wsdl.&lt;your endpoint name, without the Endpoint bit&gt;.export
		* New in 0.2: The EndpointFunctionalTestCase has been updated to package a more
		  groovy withEndpointRequest closure that significantly tightens up your endpoint
		  functional test code. (Thanks to Graeme Rocher for the input there!)
        * On the service provision side, a first-class endpoint	artefact is introduced including 
          functional tests for endpoints.
        * When consuming services, a WebServiceTemplate is provided, in much the same vein as 
          the Spring WebServiceTemplate, that integrates more naturally with the rest of your Groovy code.</description>
  <documentation>http://grails.org/SpringWs+Plugin</documentation>
  <resources>
    <resource>Config</resource>
    <resource>spring.resources</resource>
    <resource>EndpointInterceptors</resource>
    <resource>HolidayEndpoint</resource>
  </resources>
  <dependencies>
    <plugin name='functionalTest' version='1.2.5 &gt; *' />
  </dependencies>
</plugin>